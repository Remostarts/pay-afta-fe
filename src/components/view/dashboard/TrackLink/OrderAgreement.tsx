'use client';

import React, { useState } from 'react';
import { Download } from 'lucide-react';

import PaymentSuccessful from '../shared/PaymentSuccessful';

import { ReButton } from '@/components/re-ui/ReButton';
import {
  Dialog,
  DialogContent,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from '@/components/ui/dialog';
import { Checkbox } from '@/components/ui/checkbox';

interface OrderAgreementProps {
  handleCurrentStepChange: (step: number) => void;
  currentStepChange: number;
  showActions?: boolean;
  userRole: 'buyer' | 'seller';
}

export default function OrderAgreement({
  handleCurrentStepChange,
  currentStepChange,
  showActions = false,
  userRole,
}: OrderAgreementProps) {
  const [isOpen, setIsOpen] = useState<boolean>(false);
  const [isAgreed, setIsAgreed] = useState(false);
  const [showConfirmDialog, setShowConfirmDialog] = useState(false);

  const handleAcceptOrder = () => {
    setIsOpen(true);
  };

  const handleConfirmTransaction = () => {
    handleCurrentStepChange(2);
    setIsOpen(false);
  };

  const handleRejectOrder = () => {
    // Add rejection logic here
    console.log('Order rejected');
    handleCurrentStepChange(currentStepChange - 1);
  };

  const handleDownload = () => {
    // Handle PDF download logic here
    console.log('Downloading escrow agreement PDF');
  };

  const handleAccept = () => {
    if (isAgreed) {
      setShowConfirmDialog(true);
    }
  };

  const handleReject = () => {
    console.log('Order rejected');
  };

  const handleCancelConfirmation = () => {
    setShowConfirmDialog(false);
  };

  if (!showActions) {
    return (
      <div className="mt-5 rounded-xl border-2 border-gray-200 bg-[#eeeeee] p-5">
        <h2 className="mb-2 text-lg font-medium font-inter">Awaiting Approval</h2>
        <p className="text-sm text-gray-600 font-inter">
          Pending confirmation from buyer/seller to agreed-upon descriptions. Await approval for
          transaction to start.
        </p>
      </div>
    );
  }

  return (
    <section className="mt-5 rounded-xl border-2 border-gray-200 bg-[#E6E6E6] p-5">
      <div className="mb-5">
        <h1 className="mb-4 text-2xl font-semibold text-gray-900 font-inter">Escrow Agreement</h1>

        <p className="mb-6 text-gray-600 leading-relaxed font-inter">
          This agreement confirms that the buyer, Paul Simeon, has created an escrow transaction for
          goods/services as described below. This transaction is governed by an escrow agreement
          automatically generated by PayAffs based on the details provided by both parties. Please
          review the agreement carefully before proceeding.
        </p>
      </div>

      <button
        onClick={handleDownload}
        className="mb-8 flex items-center gap-2 text-blue-600 hover:text-blue-700 transition-colors"
      >
        <Download className="h-4 w-4" />
        Download Escrow Agreement (PDF)
      </button>

      <div className="mb-8 flex items-start gap-3">
        <Checkbox
          id="agreement"
          checked={isAgreed}
          onCheckedChange={(checked) => setIsAgreed(checked as boolean)}
          className="mt-1"
        />
        <label htmlFor="agreement" className="text-sm text-gray-700 leading-relaxed cursor-pointer">
          I have read and agree to the Escrow Agreement. I understand that proceeding confirms my
          acceptance of the terms stated within.
        </label>
      </div>

      <div className="flex items-center gap-5">
        <Dialog open={isOpen} onOpenChange={setIsOpen}>
          <DialogTrigger asChild>
            <ReButton
              className="w-2/5 rounded-full"
              onClick={handleAcceptOrder}
              disabled={!isAgreed}
            >
              Accept Order
            </ReButton>
          </DialogTrigger>
          <DialogContent>
            <DialogHeader>
              <DialogTitle>Transaction Confirmation</DialogTitle>
            </DialogHeader>
            <PaymentSuccessful label={'Transaction confirmed!'} />
            <DialogFooter>
              <ReButton onClick={handleConfirmTransaction} className="rounded-full">
                Done
              </ReButton>
            </DialogFooter>
          </DialogContent>
        </Dialog>
        <ReButton
          className="w-2/5 rounded-full border-2 border-[#03045B] bg-white text-[#03045B] hover:bg-white"
          onClick={handleRejectOrder}
        >
          Reject
        </ReButton>
      </div>
    </section>
  );
}
